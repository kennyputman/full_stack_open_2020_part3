{"version":3,"sources":["components/Contacts.js","components/Filter.js","components/PersonForm.js","services/persons.js","App.js","index.js"],"names":["Contacts","persons","newNameFilter","deletePerson","map","person","key","id","name","number","onClick","filter","toLowerCase","includes","Filter","handleNameFilterChange","value","onChange","PersonForm","addContact","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","delete","put","App","useState","setPersons","setID","setNewName","setNewNumber","setNewNameFilter","errorMessage","setErrorMessage","useEffect","personsService","initialPersons","Notification","message","className","event","target","preventDefault","nameObject","some","window","confirm","matchedPerson","find","updatedPerson","catch","error","console","log","setTimeout","returnedPerson","concat","eachPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.826b8b08.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Contacts = (persons, newNameFilter, deletePerson) => {\n  if (newNameFilter === \"\") {\n    return persons.map((person) => (\n      <div key={person.id}>\n        {person.name}: {person.number}{\" \"}\n        <button onClick={() => deletePerson(person)}>delete</button>\n      </div>\n    ));\n  } else {\n    return persons\n      .filter((person) =>\n        person.name.toLowerCase().includes(newNameFilter.toLowerCase())\n      )\n      .map((person) => (\n        <div key={person.id}>\n          {person.name}: {person.number}\n          <button onClick={() => deletePerson(person)}>delete</button>\n        </div>\n      ));\n  }\n};\n\nexport default Contacts;\n","import React from \"react\";\n\nconst Filter = (newNameFilter, handleNameFilterChange) => {\n  return (\n    <div>\n      Filter shown with\n      <input value={newNameFilter} onChange={handleNameFilterChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = (\n  addContact,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange\n) => {\n  return (\n    <form onSubmit={addContact}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst removePerson = (person) => {\n  const request = axios.delete(`${baseUrl}/${person.id}`);\n  return request.then((response) => response.data);\n};\n\nconst changeNumber = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, removePerson, changeNumber };\n","import React, { useState, useEffect } from \"react\";\nimport Contacts from \"./components/Contacts\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport personsService from \"./services/persons\";\nimport \"./index.css\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [id, setID] = useState(4);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newNameFilter, setNewNameFilter] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    personsService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null;\n    }\n\n    return <div className=\"error\">{message}</div>;\n  };\n\n  const addContact = (event) => {\n    event.preventDefault();\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n      id: setID(id + 1),\n    };\n\n    if (persons.some((person) => person.name === nameObject.name)) {\n      if (\n        window.confirm(\n          `${nameObject.name} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        const matchedPerson = persons.find(\n          (person) => person.name === nameObject.name\n        );\n        const updatedPerson = { ...matchedPerson, number: nameObject.number };\n\n        personsService\n          .changeNumber(updatedPerson.id, updatedPerson)\n          .then(() => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== updatedPerson.id ? person : updatedPerson\n              )\n            );\n            setNewNumber(\"\");\n            setNewName(\"\");\n          })\n          .catch((error) => {\n            console.log(error.response.data.error);\n            setErrorMessage(error.response.data.error);\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 5000);\n          });\n      }\n    } else {\n      personsService\n        .create(nameObject)\n        .then((returnedPerson) => {\n          setPersons(persons.concat(returnedPerson));\n          setNewNumber(\"\");\n          setNewName(\"\");\n          setErrorMessage(`Added ${nameObject.name}`);\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          console.log(error.response.data.error);\n          setErrorMessage(error.response.data.error);\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n  const handleNameFilterChange = (event) => {\n    setNewNameFilter(event.target.value);\n  };\n\n  const deletePerson = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personsService.removePerson(person).then(() => {\n        setPersons(persons.filter((eachPerson) => eachPerson.id !== person.id));\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage}></Notification>\n      {Filter(newNameFilter, handleNameFilterChange)}\n      <h3>Add a New Contact</h3>\n      {PersonForm(\n        addContact,\n        newName,\n        handleNameChange,\n        newNumber,\n        handleNumberChange\n      )}\n      <h3>Numbers</h3>\n      {Contacts(persons, newNameFilter, deletePerson)}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}